{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to \u2693\ufe0f anchor","text":"<p>Anchor is simple and extensible state management architecture built on Kotlin's Context receivers with Jetpack Compose integration.</p> <p>Goal</p> <p>Focus on writing an amazing app and let Anchor handle the rest!</p>"},{"location":"#installation","title":"Installation","text":"<p>Follow the Github Packages guide to use a published package from the github packages repository.</p> <ol> <li> <p>Generate a classic token with <code>read:packages</code> access with the help    of Github guide</p> </li> <li> <p>Add the repository to your build.gradle.kts file</p> <pre><code>repositories {\n  maven {\n    url = uri(\"https://maven.pkg.github.com/kioba/anchor\")\n    credentials {\n      username = project.findProperty(\"gpr.user\") as String? ?: System.getenv(\"USERNAME\")\n      password = project.findProperty(\"gpr.key\") as String? ?: System.getenv(\"TOKEN\")\n    }\n  }\n}\n</code></pre> </li> <li> <p>Add the package dependencies to your build.gradle.kts file</p> <pre><code>implementation(\"dev.kioba:anchor:0.0.8\")\n</code></pre> </li> </ol>"},{"location":"#counter-example","title":"Counter example","text":"<p>Counter example to showcase the usage of Anchor architecture. The screen displays a count and the ability to increment and decrement the count.</p> <p></p> <pre><code>// viewState to represent the state of screen\ndata class CounterState(\n  val count: Int = 0,\n) : ViewState\n\n// type alias to easily reference our Scope without repeating the type arguments\ntypealias CounterAnchor = Anchor&lt;EmptyEffect, CounterState&gt;\n\n// function to generate the Scope with the initial state\nfun RememberAnchorScope.counterAnchor(): CounterAnchor =\n  create(\n    initialState = ::CounterState,\n    effectScope = { EmptyEffect },\n  )\n\n// Provide the Anchor abilities with a captured receiver\nfun CounterAnchor.increment() {\n  // modify the view state by incrementing the state value\n  reduce { copy(count = count.inc()) }\n}\n\n@Composable\nfun CounterUi() {\n  // Scope computations are remembered and retained across configuration changes\n  RememberAnchor(RememberAnchorScope::counterAnchor) { state -&gt;\n    Button(\n      // within a RememberAnchor actions can be executed\n      // without the requirement to pass around the scope\n      onClick = anchor&lt;CounterAnchor&gt; { increment() },\n    ) { IncrementIcon() }\n  }\n}\n</code></pre>"},{"location":"#viewmodel","title":"ViewModel","text":"<p>Storing Anchor within a ViewModel is not required manually. <code>RememberAnchor</code> takes care of handling the storage within a dedicated ViewModel.</p>"},{"location":"#configuration-changes-and-process-death","title":"Configuration changes and process death","text":"<p>TBD</p>"},{"location":"#viewstate","title":"ViewState","text":"<p>TBD</p>"},{"location":"#license","title":"License","text":"<pre><code>Copyright 2025 Karoly Somodi\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n</code></pre>"},{"location":"documents/","title":"MKDoc usage","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"documents/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"documents/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"}]}